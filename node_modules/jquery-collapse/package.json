{
  "name": "jquery-collapse",
  "version": "1.1.2",
  "description": "A lightweight (~1kb) jQuery plugin that enables expanding and collapsing content",
  "devDependencies": {
    "coveralls": "^2.11.4",
    "jquery": "~2.1.1",
    "karma": "^0.13.10",
    "karma-chrome-launcher": "~0.1.4",
    "karma-coffee-preprocessor": "~0.2.1",
    "karma-coverage": "^0.5.2",
    "karma-coveralls": "^1.1.2",
    "karma-firefox-launcher": "~0.1.3",
    "karma-mocha": "~0.1.4",
    "karma-sinon-chai": "~0.2.0",
    "mocha": "~1.20.1",
    "should": "~4.0.4"
  },
  "scripts": {
    "test": "./node_modules/karma/bin/karma start --single-run"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/danielstocks/jQuery-Collapse.git"
  },
  "author": {
    "name": "Daniel Stocks"
  },
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/danielstocks/jQuery-Collapse/issues"
  },
  "readme": "# jQuery Collapse\n\nA lightweight and flexible jQuery plugin that allows you to collapse content. A feature also known as 'progressive disclosure'.\n\njQuery Collapse is tested against the latest version of jQuery but requires at least jQuery 1.7.0.\n\n[![Build Status](https://travis-ci.org/danielstocks/jQuery-Collapse.png?branch=master)](https://travis-ci.org/danielstocks/jQuery-Collapse)\n[![Code Climate](https://codeclimate.com/github/danielstocks/jQuery-Collapse.png)](https://codeclimate.com/github/danielstocks/jQuery-Collapse)\n[![Coveralls](https://img.shields.io/coveralls/danielstocks/jQuery-Collapse/master.svg)](https://coveralls.io/github/danielstocks/jQuery-Collapse?branch=master)\n\n## Features\n\n- [WAI ARIA](http://dev.opera.com/articles/view/introduction-to-wai-aria/) compliant\n- Lightweight (~1.2kb minified and gzipped)\n- Cross Browser compliant (Tested in >= IE6, Firefox, Safari, Chrome, Opera)\n- **Accordion** behaviour can be enabled.\n- **Persistence** to remember open sections on page reload!\n\n\n### Demo\n\nA demo showcasing all the features of the plugin can be found at 'demo/demo.html' in this repository.\n\n## Usage\n\nLoad jQuery and the jQuery Collapse plugin into your document:\n\n```html\n<script src=\"http://ajax.googleapis.com/ajax/libs/jquery/1.8.1/jquery.min.js\"></script>\n<script src=\"jquery.collapse.js\"></script>\n```\n\nHere's some sample HTML markup:\n\n```html\n<div data-collapse>\n  <h2>Fruits</h2>\n  <ul>\n    <li>Apple</li>\n    <li>Pear</li>\n    <li>Orange</li>\n  </ul>\n  <h2>Info</h2>\n  <div>\n    <p>You can use any container you like (in this case a div element)</p>\n  </div>\n</div>\n```\n\nThat's it! The *data-collapse* attribute will automatically trigger the script.\n\n### Open/Collapse section by default\n\nThe standard behaviour is to collapse all the sections on page load.\nIf you want to show a section to the user on page load you can\nachieve this by adding an 'open' class to the section heading\n\n```html\n<div data-collapse>\n  <h2 class=\"open\">I'm open by default</h2>\n  <p>Yay</p>\n</div>\n```\n\n### Open all sections\n\nYou can open or close sections by utilizing events. Assume you have the following markup:\n\n```html\n<div id=\"test\" data-collapse>\n  <h2>Section 1</h2>\n  <p>I'm first</p>\n  <h2>Section 2</h2>\n  <p>I'm second/p>\n</div>\n```\nYou can now trigger events on the elements you want to affect. For instance:\n\n```js\n$(\"#test\").trigger(\"open\") // Open all sections\n$(\"#test\").trigger(\"close\") // Close all sections\n$(\"#test h2 a\").first().trigger(\"open\") // Open first section\n```\n\nFor further information, please refer to the [events](#events) documentation.\n\n## JavaScript usage\n\nIf you'd rather omit the 'data-collapse' attribute in the HTML and load the plugin via jQuery, you can:\n\n```js\n$(\"#demo\").collapse({\n  // options...\n});\n```\n\nIf you don't want to use the jQuery ($) wrapper, you can also access the\nplugin with *vanilla* JavaScript:\n\n```js\nnew jQueryCollapse($(\"#demo\"), {\n  // options...\n});\n```\n\n### Using custom markup\n\nBy default the plugin will look for groups of two elements.\nIn real lifeâ„¢ your markup may vary and you'll need to customize how the\nplugin interprets it. For example\n\n```html\n<div id=\"demo\">\n  <div>\n    <h2>Summary</h2>\n    <div>details...</div>\n  </div>\n  <div>\n    <h2>Summary</h2>\n    <div>details...</div>\n  </div>\n</div>\n```\n\nIn order for the plugin to understand the above markup, we can pass a 'query'\noption specifying where to find the header/summary element of a section:\n\n```js\nnew jQueryCollapse($(\"#demo\"), {\n  query: 'div h2'\n});\n```\n\n#### External markup example\n\nYou can also just use an arbitrary link on a page to collapse\\expand a section:\n\n```html\n<a id=\"toggle\" href=\"#demo\">Toggle section</a>\n<div id=\"demo\" data-collapse>\n  <div>\n    <h2>Summary</h2>\n    <div>details...</div>\n  </div>\n</div>\n```\n\nThen attach an event handler to your link and make use of jQuery Collapse events to toggle the section:\n\n```js\n$(\"#toggle\").click(function() {\n  $(this.hash).trigger(\"toggle\");\n});\n```\n\n#### Custom click query\n\nSometimes you want to customize what element inside the collapse summary that should trigger the open/close action. Consider the following markup:\n\n```html\n<div id=\"custom-click-query\">\n  <div class=\"test\">\n    <a href=\"http://www.google.com\">Google.com</a> <span class=\"toggle\">info</span>\n  </div>\n  <div>\n    <p>Find stuff on google</p>\n  </div>\n  <div class=\"test\">\n    <a href=\"http://www.twitter.com\">Twitter.com</a> <span class=\"toggle\">info</span>\n  </div>\n  <div>\n    <p>Tweet stuff on twitter</p>\n  </div>\n</div>\n```\n\nNow use the clickQuery option to trigger the action only when the span is clicked\n\n```js\n$(\"#custom-click-query\").collapse({\n  clickQuery: \"span.toggle\"\n});\n```\n\n\n## Accordion\n\nTo activate the accordion behaviour set 'accordion' as the value of the 'data-collapse' attribute:\n\n```html\n<div data-collapse=\"accordion\">\n  ...\n</div>\n```\n\n\n## Persistence\n\nBy default, if the user reloads the page all the sections will be closed.\nIf you want previously collapsed sections to stay open you can add 'persist' to the data-collapse attribute:\n\n```html\n<div id=\"demo\" data-collapse=\"persist\">\n  ...\n</div>\n```\nAnd include the storage module in your document *after* the other\nscripts.\n\n```html\n<script src=\"jquery.collapse_storage.js\"></script>\n```\n\nAs in the example above, the target element (#demo) **will require an ID** in order for the\npersistence to work.\n\nYou can combine the accordion and persistence options by adding\nboth values to the data-collapse attribute:\n\n```html\n<div id=\"demo\" data-collapse=\"accordion persist\">\n  ...\n</div>\n```\n\njQuery Collapse uses HTML5 localStorage if available, otherwise it\nwill attempt to use cookies (read about IE support below). If that also fails, it will degrade\nto work but without any persistence.\n\n### Internet Explorer =< 7 Support\n\nFor IE 6-7 you'll need to include the cookie storage and JSON2 libraries\nfor the cookie storage support to work properly:\n\n```html\n<!--[if lt IE 8]>\n  <script src=\"jquery.collapse_cookie_storage.js\"></script>\n  <script src=\"json2.js\"></script>\n<![endif]-->\n```\n\n## API Documentation\n\nHere are the exposed options and events that you can play around with\nusing JavaScript. Enjoy.\n\n### Options\n\nYou can pass the following options when initializing\nthe plugin with JavaScript.\n\n* **open** (function) : Custom function for opening section (default: function(){ this.show() })\n* **close** (function) : Custom function for collapsing section (default: function(){ this.hide() })\n* **accordion** (bool) : Enable accordion behaviour by setting this option to 'true'\n* **persist** (bool) : Enable persistence between page loads by setting this option to 'true'\n* **query** (string) : Please refer to to [using custom markup](#using-custom-markup)\n* **clickQuery** (string): Please refer to [custom click query](#custom-click-query)\n\nExample usage of options:\n\n```js\n// Initializing collapse plugin\n// with custom open/close methods,\n// persistence plugin and accordion behaviour\n$(\"#demo\").collapse({\n  open: function() {\n    // The context of 'this' is applied to\n    // the collapsed details in a jQuery wrapper\n    this.slideDown(100);\n  },\n  close: function() {\n    this.slideUp(100);\n  },\n  accordion: true,\n  persist: true\n});\n```\n\n### Events\n\n#### Binding events\n\nYou can listen for the **opened** and **closed** events on a collapsed collection.\n\n```js\n\n$(\"#demo\").bind(\"opened\", function(e, section) {\n  console.log(section, \" was opened\");\n});\n\n$(\"#demo\").bind(\"closed\", function(e, section) {\n  console.log(section, \" was closed\");\n});\n```\n\n#### Triggering events\n\nYou can manually trigger an **open**, **close** or **toggle** event to change the state of a section:\n\n```js\n$(\"#demo\").trigger(\"open\") // open all sections\n$(\"#demo\").trigger(\"close\") // close all sections\n$(\"#demo h2 a\").last().trigger(\"toggle\") // toggle last section\n```\n\nWhen a section changes state, it will trigger either an \"opened\" or \"closed\" event in return, depending on it's new state.\n\n### API methods\n\nIf you're using vanilla JavaScript to instantiate the plugin, you'll get\ndirect access to the **open**, **close** and **toggle** methods.\n\n```js\nvar demo = new jQueryCollapse($(\"#demo\")); // Initializing plugin\ndemo.open(); // Open all sections\ndemo.close(); // Close all sections\ndemo.open(0); // Open first section\ndemo.open(1); // Open second section\ndemo.close(0); // Close first section\ndemo.toggle(1); // Toggle second section\n```\n\n## Contributing\n\nDid you find a bug? Do you want to introduce a feature? Here's what to do (in the following order)\n\n* Clone this repository, and run `npm install`\n* Write a test case\n* Watch it fail (red light)\n* Fix bug / introduce feature\n* Watch it pass (green light)\n* Refactor / Perfectionize!\n* Submit a pull request on Github and wait patiently...\n* Rejoice!\n\n### A note about testing\n\nTo run the tests simply type \"npm test\". The [Karma](http://karma-runner.github.io/) test runner will open Chrome and Firefox and run the tests.\n\nThe tests are written in a BDD fashion using CoffeeScript and can be found in the test directory.\n\nThe test suite uses [Mocha](http://visionmedia.github.io/mocha/) (test framework), [Chai](http://chaijs.com/) (exceptions) and [Sinon](http://sinonjs.org/) (stubs and mocks).\n",
  "readmeFilename": "README.md",
  "_id": "jquery-collapse@1.1.2",
  "dist": {
    "shasum": "89c0eed691d8a3917561d1d963b9386dfee5575d"
  },
  "_from": "jquery-collapse@",
  "_resolved": "https://registry.npmjs.org/jquery-collapse/-/jquery-collapse-1.1.2.tgz"
}
